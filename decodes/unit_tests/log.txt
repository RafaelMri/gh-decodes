

== TEST_PGON ==
test_empty_constructor (decodes.unit_tests.test_pgon.Tests) ... ok

----------------------------------------------------------------------
Ran 1 test in 0.002s

OK


== TEST_PLINE ==
test_empty_constructor (decodes.unit_tests.test_pline.Tests) ... ok
test_segments (decodes.unit_tests.test_pline.Tests) ... ok

----------------------------------------------------------------------
Ran 2 tests in 0.177s

OK


== TEST_MESH ==
test_empty_constructor (decodes.unit_tests.test_mesh.Tests) ... ok
test_explode (decodes.unit_tests.test_mesh.Tests) ... ok
test_face_access (decodes.unit_tests.test_mesh.Tests) ... ok
test_simple_constructor (decodes.unit_tests.test_mesh.Tests) ... ok

----------------------------------------------------------------------
Ran 4 tests in 0.043s

OK


== TEST_POINT ==
test_based_constructor (decodes.unit_tests.test_point.Tests) ... ok
test_empty_constructor (decodes.unit_tests.test_point.Tests) ... ok
test_nearest_point (decodes.unit_tests.test_point.Tests) ... ok

----------------------------------------------------------------------
Ran 3 tests in 0.017s

OK


== TEST_HAS_PTS ==
test_appending_points (decodes.unit_tests.test_has_pts.Tests) ... ok
test_basis_applied_and_stripped (decodes.unit_tests.test_has_pts.Tests) ... ok
test_centroid (decodes.unit_tests.test_has_pts.Tests) ... ok
test_item_access (decodes.unit_tests.test_has_pts.Tests) ... ok
test_manipulating_points (decodes.unit_tests.test_has_pts.Tests) ... FAIL

======================================================================
FAIL: test_manipulating_points (decodes.unit_tests.test_has_pts.Tests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "G:\git\decodes\decodes\unit_tests\test_has_pts.py", line 36, in test_manipulating_points
    self.assertEqual(Vec(0,0,10),pgon[0],"square bracket access returns a reference to stored vectors, allowing for manipulation")
AssertionError: square bracket access returns a reference to stored vectors, allowing for manipulation

----------------------------------------------------------------------
Ran 5 tests in 0.078s

FAILED (failures=1)


== TEST_CURVE ==
test_bezier (decodes.unit_tests.test_curve.Tests) ... ok
test_constructor (decodes.unit_tests.test_curve.Tests) ... ok
test_division (decodes.unit_tests.test_curve.Tests) ... ok
test_far (decodes.unit_tests.test_curve.Tests) ... ok
test_hermite (decodes.unit_tests.test_curve.Tests) ... ok
test_subdivide (decodes.unit_tests.test_curve.Tests) ... ok

----------------------------------------------------------------------
Ran 6 tests in 0.804s

OK


== TEST_PLANE ==
test_copy_constructors (decodes.unit_tests.test_plane.Tests) ... ok
test_empty_constructor (decodes.unit_tests.test_plane.Tests) ... ok
test_near (decodes.unit_tests.test_plane.Tests) ... ok

----------------------------------------------------------------------
Ran 3 tests in 0.010s

OK


== TEST_INTERVAL ==
test_empty_constructor (decodes.unit_tests.test_interval.Tests) ... ok
test_operations (decodes.unit_tests.test_interval.Tests) ... ok
test_properties (decodes.unit_tests.test_interval.Tests) ... ok

----------------------------------------------------------------------
Ran 3 tests in 0.003s

OK


== TEST_LINE ==
test_line (decodes.unit_tests.test_line.Tests) ... ok
test_near_pt (decodes.unit_tests.test_line.Tests) ... ok
test_ray (decodes.unit_tests.test_line.Tests) ... ok
test_segment (decodes.unit_tests.test_line.Tests) ... ok

----------------------------------------------------------------------
Ran 4 tests in 0.020s

OK
